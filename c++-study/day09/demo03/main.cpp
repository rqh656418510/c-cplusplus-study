/*
 * 1. 函数模板与函数重载
*/

#include "iostream"

using namespace std;

int Max(int a, int b)
{
	cout << "int Max(int a, int b)" << endl;
	return a > b ? a : b;
}

template <typename T>
T Max(T a, T b)
{
	cout << "T Max(T a, T b)" << endl;
	return a > b ? a : b;
}

template <typename T>
T Max(T a, T b, T c)
{
	cout << "T Max(T a, T b, T c)" << endl;
	return Max(Max(a, b), c);
}

void main()
{
	int a = 1;
	int b = 2;
	cout << Max(a, b) << endl; // 当函数模板和普通函数都符合调用时,优先选择普通函数
	cout << Max<>(a, b) << endl; //  通过空模板实参列表的语法，可以限制编译器只使用函数模板匹配
	cout << Max(3.0, 4.0) << endl; // 如果函数模板产生更好的匹配 使用函数模板
	cout << Max(5.0, 6.0, 7.0) << endl; // 函数模板的重载
	cout << Max('a', 100) << endl;  //调用普通函数，可以进行隐式类型转换 
	return;
}
