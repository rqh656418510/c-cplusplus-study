// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: userservice.proto
// Protobuf C++ Version: 6.31.1

#ifndef userservice_2eproto_2epb_2eh
#define userservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/service.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_userservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_userservice_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_userservice_2eproto;
}  // extern "C"
namespace user {
enum RegRequest_SEX : int;
extern const uint32_t RegRequest_SEX_internal_data_[];
class LoginRequest;
struct LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginRequest_class_data_;
class RegRequest;
struct RegRequestDefaultTypeInternal;
extern RegRequestDefaultTypeInternal _RegRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RegRequest_class_data_;
class Response;
struct ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Response_class_data_;
}  // namespace user
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::user::RegRequest_SEX_internal_data_>
    internal::EnumTraitsImpl::value<::user::RegRequest_SEX>;
}  // namespace protobuf
}  // namespace google

namespace user {
enum RegRequest_SEX : int {
  RegRequest_SEX_MAN = 0,
  RegRequest_SEX_WOMAN = 1,
  RegRequest_SEX_RegRequest_SEX_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RegRequest_SEX_RegRequest_SEX_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RegRequest_SEX_internal_data_[];
inline constexpr RegRequest_SEX RegRequest_SEX_SEX_MIN =
    static_cast<RegRequest_SEX>(0);
inline constexpr RegRequest_SEX RegRequest_SEX_SEX_MAX =
    static_cast<RegRequest_SEX>(1);
inline bool RegRequest_SEX_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int RegRequest_SEX_SEX_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RegRequest_SEX_descriptor();
template <typename T>
const ::std::string& RegRequest_SEX_Name(T value) {
  static_assert(::std::is_same<T, RegRequest_SEX>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SEX_Name().");
  return RegRequest_SEX_Name(static_cast<RegRequest_SEX>(value));
}
template <>
inline const ::std::string& RegRequest_SEX_Name(RegRequest_SEX value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RegRequest_SEX_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool RegRequest_SEX_Parse(
    ::absl::string_view name, RegRequest_SEX* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegRequest_SEX>(RegRequest_SEX_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:user.Response) */ {
 public:
  inline Response() : Response(nullptr) {}
  ~Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Response* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Response(::google::protobuf::internal::ConstantInitialized);

  inline Response(const Response& from) : Response(nullptr, from) {}
  inline Response(Response&& from) noexcept
      : Response(nullptr, ::std::move(from)) {}
  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Response& default_instance() {
    return *reinterpret_cast<const Response*>(
        &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Response& a, Response& b) { a.Swap(&b); }
  inline void Swap(Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Response* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Response* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Response& from) { Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Response* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "user.Response"; }

 protected:
  explicit Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Response& from);
  Response(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Response&& from) noexcept
      : Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrormsgFieldNumber = 2,
    kErrornoFieldNumber = 1,
    kResultFieldNumber = 3,
  };
  // string errormsg = 2;
  void clear_errormsg() ;
  const ::std::string& errormsg() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_errormsg(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_errormsg();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_errormsg();
  void set_allocated_errormsg(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_errormsg() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_errormsg(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_errormsg();

  public:
  // int32 errorno = 1;
  void clear_errorno() ;
  ::int32_t errorno() const;
  void set_errorno(::int32_t value);

  private:
  ::int32_t _internal_errorno() const;
  void _internal_set_errorno(::int32_t value);

  public:
  // bool result = 3;
  void clear_result() ;
  bool result() const;
  void set_result(bool value);

  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);

  public:
  // @@protoc_insertion_point(class_scope:user.Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 30,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Response& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr errormsg_;
    ::int32_t errorno_;
    bool result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_userservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Response_class_data_;
// -------------------------------------------------------------------

class RegRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:user.RegRequest) */ {
 public:
  inline RegRequest() : RegRequest(nullptr) {}
  ~RegRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegRequest(::google::protobuf::internal::ConstantInitialized);

  inline RegRequest(const RegRequest& from) : RegRequest(nullptr, from) {}
  inline RegRequest(RegRequest&& from) noexcept
      : RegRequest(nullptr, ::std::move(from)) {}
  inline RegRequest& operator=(const RegRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegRequest& operator=(RegRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegRequest& default_instance() {
    return *reinterpret_cast<const RegRequest*>(
        &_RegRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RegRequest& a, RegRequest& b) { a.Swap(&b); }
  inline void Swap(RegRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegRequest& from) { RegRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "user.RegRequest"; }

 protected:
  explicit RegRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RegRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RegRequest& from);
  RegRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RegRequest&& from) noexcept
      : RegRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SEX = RegRequest_SEX;
  static constexpr SEX MAN = RegRequest_SEX_MAN;
  static constexpr SEX WOMAN = RegRequest_SEX_WOMAN;
  static inline bool SEX_IsValid(int value) {
    return RegRequest_SEX_IsValid(value);
  }
  static constexpr SEX SEX_MIN = RegRequest_SEX_SEX_MIN;
  static constexpr SEX SEX_MAX = RegRequest_SEX_SEX_MAX;
  static constexpr int SEX_ARRAYSIZE = RegRequest_SEX_SEX_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SEX_descriptor() {
    return RegRequest_SEX_descriptor();
  }
  template <typename T>
  static inline const ::std::string& SEX_Name(T value) {
    return RegRequest_SEX_Name(value);
  }
  static inline bool SEX_Parse(
      ::absl::string_view name, SEX* PROTOBUF_NONNULL value) {
    return RegRequest_SEX_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kPwdFieldNumber = 2,
    kPhoneFieldNumber = 5,
    kAgeFieldNumber = 3,
    kSexFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string pwd = 2;
  void clear_pwd() ;
  const ::std::string& pwd() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pwd(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pwd();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pwd();
  void set_allocated_pwd(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pwd() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pwd(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pwd();

  public:
  // string phone = 5;
  void clear_phone() ;
  const ::std::string& phone() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_phone(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_phone();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_phone();
  void set_allocated_phone(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_phone() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_phone(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_phone();

  public:
  // int32 age = 3;
  void clear_age() ;
  ::int32_t age() const;
  void set_age(::int32_t value);

  private:
  ::int32_t _internal_age() const;
  void _internal_set_age(::int32_t value);

  public:
  // .user.RegRequest.SEX sex = 4;
  void clear_sex() ;
  ::user::RegRequest_SEX sex() const;
  void set_sex(::user::RegRequest_SEX value);

  private:
  ::user::RegRequest_SEX _internal_sex() const;
  void _internal_set_sex(::user::RegRequest_SEX value);

  public:
  // @@protoc_insertion_point(class_scope:user.RegRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RegRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pwd_;
    ::google::protobuf::internal::ArenaStringPtr phone_;
    ::int32_t age_;
    int sex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_userservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RegRequest_class_data_;
// -------------------------------------------------------------------

class LoginRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:user.LoginRequest) */ {
 public:
  inline LoginRequest() : LoginRequest(nullptr) {}
  ~LoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequest(::google::protobuf::internal::ConstantInitialized);

  inline LoginRequest(const LoginRequest& from) : LoginRequest(nullptr, from) {}
  inline LoginRequest(LoginRequest&& from) noexcept
      : LoginRequest(nullptr, ::std::move(from)) {}
  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequest& default_instance() {
    return *reinterpret_cast<const LoginRequest*>(
        &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LoginRequest& a, LoginRequest& b) { a.Swap(&b); }
  inline void Swap(LoginRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRequest& from) { LoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "user.LoginRequest"; }

 protected:
  explicit LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginRequest& from);
  LoginRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginRequest&& from) noexcept
      : LoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kPwdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string pwd = 2;
  void clear_pwd() ;
  const ::std::string& pwd() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pwd(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pwd();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pwd();
  void set_allocated_pwd(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pwd() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pwd(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pwd();

  public:
  // @@protoc_insertion_point(class_scope:user.LoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 33,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr pwd_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_userservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginRequest_class_data_;

// ===================================================================


// -------------------------------------------------------------------

class UserServiceRpc_Stub;
class UserServiceRpc : public ::google::protobuf::Service {
 protected:
  UserServiceRpc() = default;

 public:
  using Stub = UserServiceRpc_Stub;

  UserServiceRpc(const UserServiceRpc&) = delete;
  UserServiceRpc& operator=(const UserServiceRpc&) = delete;
  virtual ~UserServiceRpc() = default;

  static const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL descriptor();

  virtual void login(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::user::LoginRequest* PROTOBUF_NONNULL request,
                        ::user::Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);
  virtual void reg(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::user::RegRequest* PROTOBUF_NONNULL request,
                        ::user::Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done);

  // implements Service ----------------------------------------------
  const ::google::protobuf::ServiceDescriptor* PROTOBUF_NONNULL GetDescriptor() override;

  void CallMethod(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method,
      ::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
      const ::google::protobuf::Message* PROTOBUF_NONNULL request,
      ::google::protobuf::Message* PROTOBUF_NONNULL response,
      ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

  const ::google::protobuf::Message& GetRequestPrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;

  const ::google::protobuf::Message& GetResponsePrototype(
      const ::google::protobuf::MethodDescriptor* PROTOBUF_NONNULL method) const override;
};

class UserServiceRpc_Stub final : public UserServiceRpc {
 public:
  UserServiceRpc_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel);
  UserServiceRpc_Stub(::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);

  UserServiceRpc_Stub(const UserServiceRpc_Stub&) = delete;
  UserServiceRpc_Stub& operator=(const UserServiceRpc_Stub&) = delete;

  ~UserServiceRpc_Stub() override;

  inline ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel() { return channel_; }

  // implements UserServiceRpc ------------------------------------------
  void login(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::user::LoginRequest* PROTOBUF_NONNULL request,
                        ::user::Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;
  void reg(::google::protobuf::RpcController* PROTOBUF_NULLABLE controller,
                        const ::user::RegRequest* PROTOBUF_NONNULL request,
                        ::user::Response* PROTOBUF_NONNULL response,
                        ::google::protobuf::Closure* PROTOBUF_NULLABLE done) override;

 private:
  ::google::protobuf::RpcChannel* PROTOBUF_NULLABLE channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginRequest

// string name = 1;
inline void LoginRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& LoginRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.LoginRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.LoginRequest.name)
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:user.LoginRequest.name)
  return _s;
}
inline const ::std::string& LoginRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LoginRequest::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.LoginRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void LoginRequest::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.LoginRequest.name)
}

// string pwd = 2;
inline void LoginRequest::clear_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pwd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& LoginRequest::pwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.LoginRequest.pwd)
  return _internal_pwd();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginRequest::set_pwd(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.LoginRequest.pwd)
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::mutable_pwd()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pwd();
  // @@protoc_insertion_point(field_mutable:user.LoginRequest.pwd)
  return _s;
}
inline const ::std::string& LoginRequest::_internal_pwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pwd_.Get();
}
inline void LoginRequest::_internal_set_pwd(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pwd_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::_internal_mutable_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pwd_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginRequest::release_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.LoginRequest.pwd)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pwd_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pwd_.Set("", GetArena());
  }
  return released;
}
inline void LoginRequest::set_allocated_pwd(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pwd_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pwd_.IsDefault()) {
    _impl_.pwd_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.LoginRequest.pwd)
}

// -------------------------------------------------------------------

// RegRequest

// string name = 1;
inline void RegRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RegRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.RegRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.RegRequest.name)
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:user.RegRequest.name)
  return _s;
}
inline const ::std::string& RegRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RegRequest::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.RegRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void RegRequest::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.RegRequest.name)
}

// string pwd = 2;
inline void RegRequest::clear_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pwd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RegRequest::pwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.RegRequest.pwd)
  return _internal_pwd();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegRequest::set_pwd(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.RegRequest.pwd)
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::mutable_pwd()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pwd();
  // @@protoc_insertion_point(field_mutable:user.RegRequest.pwd)
  return _s;
}
inline const ::std::string& RegRequest::_internal_pwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pwd_.Get();
}
inline void RegRequest::_internal_set_pwd(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pwd_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::_internal_mutable_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pwd_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegRequest::release_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.RegRequest.pwd)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pwd_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pwd_.Set("", GetArena());
  }
  return released;
}
inline void RegRequest::set_allocated_pwd(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pwd_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pwd_.IsDefault()) {
    _impl_.pwd_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.RegRequest.pwd)
}

// int32 age = 3;
inline void RegRequest::clear_age() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t RegRequest::age() const {
  // @@protoc_insertion_point(field_get:user.RegRequest.age)
  return _internal_age();
}
inline void RegRequest::set_age(::int32_t value) {
  _internal_set_age(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:user.RegRequest.age)
}
inline ::int32_t RegRequest::_internal_age() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.age_;
}
inline void RegRequest::_internal_set_age(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.age_ = value;
}

// .user.RegRequest.SEX sex = 4;
inline void RegRequest::clear_sex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sex_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::user::RegRequest_SEX RegRequest::sex() const {
  // @@protoc_insertion_point(field_get:user.RegRequest.sex)
  return _internal_sex();
}
inline void RegRequest::set_sex(::user::RegRequest_SEX value) {
  _internal_set_sex(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:user.RegRequest.sex)
}
inline ::user::RegRequest_SEX RegRequest::_internal_sex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::user::RegRequest_SEX>(_impl_.sex_);
}
inline void RegRequest::_internal_set_sex(::user::RegRequest_SEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sex_ = value;
}

// string phone = 5;
inline void RegRequest::clear_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& RegRequest::phone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.RegRequest.phone)
  return _internal_phone();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RegRequest::set_phone(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.RegRequest.phone)
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::mutable_phone()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_phone();
  // @@protoc_insertion_point(field_mutable:user.RegRequest.phone)
  return _s;
}
inline const ::std::string& RegRequest::_internal_phone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_.Get();
}
inline void RegRequest::_internal_set_phone(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RegRequest::_internal_mutable_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.phone_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RegRequest::release_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.RegRequest.phone)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.phone_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_.Set("", GetArena());
  }
  return released;
}
inline void RegRequest::set_allocated_phone(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.phone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_.IsDefault()) {
    _impl_.phone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.RegRequest.phone)
}

// -------------------------------------------------------------------

// Response

// int32 errorno = 1;
inline void Response::clear_errorno() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorno_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Response::errorno() const {
  // @@protoc_insertion_point(field_get:user.Response.errorno)
  return _internal_errorno();
}
inline void Response::set_errorno(::int32_t value) {
  _internal_set_errorno(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:user.Response.errorno)
}
inline ::int32_t Response::_internal_errorno() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errorno_;
}
inline void Response::_internal_set_errorno(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorno_ = value;
}

// string errormsg = 2;
inline void Response::clear_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormsg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Response::errormsg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:user.Response.errormsg)
  return _internal_errormsg();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Response::set_errormsg(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.errormsg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:user.Response.errormsg)
}
inline ::std::string* PROTOBUF_NONNULL Response::mutable_errormsg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_errormsg();
  // @@protoc_insertion_point(field_mutable:user.Response.errormsg)
  return _s;
}
inline const ::std::string& Response::_internal_errormsg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errormsg_.Get();
}
inline void Response::_internal_set_errormsg(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.errormsg_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Response::_internal_mutable_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.errormsg_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Response::release_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:user.Response.errormsg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.errormsg_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.errormsg_.Set("", GetArena());
  }
  return released;
}
inline void Response::set_allocated_errormsg(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.errormsg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.errormsg_.IsDefault()) {
    _impl_.errormsg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:user.Response.errormsg)
}

// bool result = 3;
inline void Response::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool Response::result() const {
  // @@protoc_insertion_point(field_get:user.Response.result)
  return _internal_result();
}
inline void Response::set_result(bool value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:user.Response.result)
}
inline bool Response::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void Response::_internal_set_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace user


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::user::RegRequest_SEX> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::user::RegRequest_SEX>() {
  return ::user::RegRequest_SEX_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // userservice_2eproto_2epb_2eh
