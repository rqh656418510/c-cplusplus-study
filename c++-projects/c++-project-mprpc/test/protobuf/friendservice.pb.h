// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: friendservice.proto
// Protobuf C++ Version: 6.31.1

#ifndef friendservice_2eproto_2epb_2eh
#define friendservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_friendservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_friendservice_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_friendservice_2eproto;
}  // extern "C"
namespace friends {
enum User_SEX : int;
extern const uint32_t User_SEX_internal_data_[];
class GetFriendListResponse;
struct GetFriendListResponseDefaultTypeInternal;
extern GetFriendListResponseDefaultTypeInternal _GetFriendListResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetFriendListResponse_class_data_;
class GetFriendListRquest;
struct GetFriendListRquestDefaultTypeInternal;
extern GetFriendListRquestDefaultTypeInternal _GetFriendListRquest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetFriendListRquest_class_data_;
class ResultCode;
struct ResultCodeDefaultTypeInternal;
extern ResultCodeDefaultTypeInternal _ResultCode_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResultCode_class_data_;
class User;
struct UserDefaultTypeInternal;
extern UserDefaultTypeInternal _User_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull User_class_data_;
}  // namespace friends
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::friends::User_SEX_internal_data_>
    internal::EnumTraitsImpl::value<::friends::User_SEX>;
}  // namespace protobuf
}  // namespace google

namespace friends {
enum User_SEX : int {
  User_SEX_MAN = 0,
  User_SEX_WOMAN = 1,
  User_SEX_User_SEX_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  User_SEX_User_SEX_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t User_SEX_internal_data_[];
inline constexpr User_SEX User_SEX_SEX_MIN =
    static_cast<User_SEX>(0);
inline constexpr User_SEX User_SEX_SEX_MAX =
    static_cast<User_SEX>(1);
inline bool User_SEX_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int User_SEX_SEX_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL User_SEX_descriptor();
template <typename T>
const ::std::string& User_SEX_Name(T value) {
  static_assert(::std::is_same<T, User_SEX>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SEX_Name().");
  return User_SEX_Name(static_cast<User_SEX>(value));
}
template <>
inline const ::std::string& User_SEX_Name(User_SEX value) {
  return ::google::protobuf::internal::NameOfDenseEnum<User_SEX_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool User_SEX_Parse(
    ::absl::string_view name, User_SEX* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<User_SEX>(User_SEX_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class User final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:friends.User) */ {
 public:
  inline User() : User(nullptr) {}
  ~User() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(User* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(User));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR User(::google::protobuf::internal::ConstantInitialized);

  inline User(const User& from) : User(nullptr, from) {}
  inline User(User&& from) noexcept
      : User(nullptr, ::std::move(from)) {}
  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }
  inline User& operator=(User&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const User& default_instance() {
    return *reinterpret_cast<const User*>(
        &_User_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(User& a, User& b) { a.Swap(&b); }
  inline void Swap(User* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(User* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  User* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<User>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const User& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const User& from) { User::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(User* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "friends.User"; }

 protected:
  explicit User(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  User(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const User& from);
  User(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, User&& from) noexcept
      : User(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SEX = User_SEX;
  static constexpr SEX MAN = User_SEX_MAN;
  static constexpr SEX WOMAN = User_SEX_WOMAN;
  static inline bool SEX_IsValid(int value) {
    return User_SEX_IsValid(value);
  }
  static constexpr SEX SEX_MIN = User_SEX_SEX_MIN;
  static constexpr SEX SEX_MAX = User_SEX_SEX_MAX;
  static constexpr int SEX_ARRAYSIZE = User_SEX_SEX_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SEX_descriptor() {
    return User_SEX_descriptor();
  }
  template <typename T>
  static inline const ::std::string& SEX_Name(T value) {
    return User_SEX_Name(value);
  }
  static inline bool SEX_Parse(
      ::absl::string_view name, SEX* PROTOBUF_NONNULL value) {
    return User_SEX_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kSexFieldNumber = 3,
  };
  // string name = 2;
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // .friends.User.SEX sex = 3;
  void clear_sex() ;
  ::friends::User_SEX sex() const;
  void set_sex(::friends::User_SEX value);

  private:
  ::friends::User_SEX _internal_sex() const;
  void _internal_set_sex(::friends::User_SEX value);

  public:
  // @@protoc_insertion_point(class_scope:friends.User)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 25,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const User& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t id_;
    int sex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_friendservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull User_class_data_;
// -------------------------------------------------------------------

class ResultCode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:friends.ResultCode) */ {
 public:
  inline ResultCode() : ResultCode(nullptr) {}
  ~ResultCode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResultCode* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResultCode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResultCode(::google::protobuf::internal::ConstantInitialized);

  inline ResultCode(const ResultCode& from) : ResultCode(nullptr, from) {}
  inline ResultCode(ResultCode&& from) noexcept
      : ResultCode(nullptr, ::std::move(from)) {}
  inline ResultCode& operator=(const ResultCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResultCode& operator=(ResultCode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResultCode& default_instance() {
    return *reinterpret_cast<const ResultCode*>(
        &_ResultCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ResultCode& a, ResultCode& b) { a.Swap(&b); }
  inline void Swap(ResultCode* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResultCode* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResultCode* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResultCode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResultCode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResultCode& from) { ResultCode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResultCode* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "friends.ResultCode"; }

 protected:
  explicit ResultCode(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResultCode(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResultCode& from);
  ResultCode(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResultCode&& from) noexcept
      : ResultCode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrormsgFieldNumber = 2,
    kErrornoFieldNumber = 1,
    kResultFieldNumber = 3,
  };
  // string errormsg = 2;
  void clear_errormsg() ;
  const ::std::string& errormsg() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_errormsg(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_errormsg();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_errormsg();
  void set_allocated_errormsg(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_errormsg() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_errormsg(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_errormsg();

  public:
  // int32 errorno = 1;
  void clear_errorno() ;
  ::int32_t errorno() const;
  void set_errorno(::int32_t value);

  private:
  ::int32_t _internal_errorno() const;
  void _internal_set_errorno(::int32_t value);

  public:
  // bool result = 3;
  void clear_result() ;
  bool result() const;
  void set_result(bool value);

  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);

  public:
  // @@protoc_insertion_point(class_scope:friends.ResultCode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResultCode& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr errormsg_;
    ::int32_t errorno_;
    bool result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_friendservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResultCode_class_data_;
// -------------------------------------------------------------------

class GetFriendListRquest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:friends.GetFriendListRquest) */ {
 public:
  inline GetFriendListRquest() : GetFriendListRquest(nullptr) {}
  ~GetFriendListRquest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFriendListRquest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFriendListRquest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFriendListRquest(::google::protobuf::internal::ConstantInitialized);

  inline GetFriendListRquest(const GetFriendListRquest& from) : GetFriendListRquest(nullptr, from) {}
  inline GetFriendListRquest(GetFriendListRquest&& from) noexcept
      : GetFriendListRquest(nullptr, ::std::move(from)) {}
  inline GetFriendListRquest& operator=(const GetFriendListRquest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendListRquest& operator=(GetFriendListRquest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFriendListRquest& default_instance() {
    return *reinterpret_cast<const GetFriendListRquest*>(
        &_GetFriendListRquest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetFriendListRquest& a, GetFriendListRquest& b) { a.Swap(&b); }
  inline void Swap(GetFriendListRquest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFriendListRquest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFriendListRquest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFriendListRquest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFriendListRquest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFriendListRquest& from) { GetFriendListRquest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFriendListRquest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "friends.GetFriendListRquest"; }

 protected:
  explicit GetFriendListRquest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetFriendListRquest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetFriendListRquest& from);
  GetFriendListRquest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetFriendListRquest&& from) noexcept
      : GetFriendListRquest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseridFieldNumber = 1,
  };
  // uint32 userid = 1;
  void clear_userid() ;
  ::uint32_t userid() const;
  void set_userid(::uint32_t value);

  private:
  ::uint32_t _internal_userid() const;
  void _internal_set_userid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:friends.GetFriendListRquest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetFriendListRquest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_friendservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetFriendListRquest_class_data_;
// -------------------------------------------------------------------

class GetFriendListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:friends.GetFriendListResponse) */ {
 public:
  inline GetFriendListResponse() : GetFriendListResponse(nullptr) {}
  ~GetFriendListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFriendListResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFriendListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFriendListResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetFriendListResponse(const GetFriendListResponse& from) : GetFriendListResponse(nullptr, from) {}
  inline GetFriendListResponse(GetFriendListResponse&& from) noexcept
      : GetFriendListResponse(nullptr, ::std::move(from)) {}
  inline GetFriendListResponse& operator=(const GetFriendListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFriendListResponse& operator=(GetFriendListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFriendListResponse& default_instance() {
    return *reinterpret_cast<const GetFriendListResponse*>(
        &_GetFriendListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetFriendListResponse& a, GetFriendListResponse& b) { a.Swap(&b); }
  inline void Swap(GetFriendListResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFriendListResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFriendListResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFriendListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFriendListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFriendListResponse& from) { GetFriendListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFriendListResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "friends.GetFriendListResponse"; }

 protected:
  explicit GetFriendListResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetFriendListResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetFriendListResponse& from);
  GetFriendListResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetFriendListResponse&& from) noexcept
      : GetFriendListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFriendListFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .friends.User friendList = 2;
  int friendlist_size() const;
  private:
  int _internal_friendlist_size() const;

  public:
  void clear_friendlist() ;
  ::friends::User* PROTOBUF_NONNULL mutable_friendlist(int index);
  ::google::protobuf::RepeatedPtrField<::friends::User>* PROTOBUF_NONNULL mutable_friendlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::friends::User>& _internal_friendlist() const;
  ::google::protobuf::RepeatedPtrField<::friends::User>* PROTOBUF_NONNULL _internal_mutable_friendlist();
  public:
  const ::friends::User& friendlist(int index) const;
  ::friends::User* PROTOBUF_NONNULL add_friendlist();
  const ::google::protobuf::RepeatedPtrField<::friends::User>& friendlist() const;
  // .friends.ResultCode result = 1;
  bool has_result() const;
  void clear_result() ;
  const ::friends::ResultCode& result() const;
  [[nodiscard]] ::friends::ResultCode* PROTOBUF_NULLABLE release_result();
  ::friends::ResultCode* PROTOBUF_NONNULL mutable_result();
  void set_allocated_result(::friends::ResultCode* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_result(::friends::ResultCode* PROTOBUF_NULLABLE value);
  ::friends::ResultCode* PROTOBUF_NULLABLE unsafe_arena_release_result();

  private:
  const ::friends::ResultCode& _internal_result() const;
  ::friends::ResultCode* PROTOBUF_NONNULL _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:friends.GetFriendListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetFriendListResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::friends::User > friendlist_;
    ::friends::ResultCode* PROTOBUF_NULLABLE result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_friendservice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetFriendListResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ResultCode

// int32 errorno = 1;
inline void ResultCode::clear_errorno() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorno_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t ResultCode::errorno() const {
  // @@protoc_insertion_point(field_get:friends.ResultCode.errorno)
  return _internal_errorno();
}
inline void ResultCode::set_errorno(::int32_t value) {
  _internal_set_errorno(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:friends.ResultCode.errorno)
}
inline ::int32_t ResultCode::_internal_errorno() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errorno_;
}
inline void ResultCode::_internal_set_errorno(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errorno_ = value;
}

// string errormsg = 2;
inline void ResultCode::clear_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errormsg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ResultCode::errormsg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:friends.ResultCode.errormsg)
  return _internal_errormsg();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ResultCode::set_errormsg(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.errormsg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:friends.ResultCode.errormsg)
}
inline ::std::string* PROTOBUF_NONNULL ResultCode::mutable_errormsg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_errormsg();
  // @@protoc_insertion_point(field_mutable:friends.ResultCode.errormsg)
  return _s;
}
inline const ::std::string& ResultCode::_internal_errormsg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errormsg_.Get();
}
inline void ResultCode::_internal_set_errormsg(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.errormsg_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ResultCode::_internal_mutable_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.errormsg_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ResultCode::release_errormsg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:friends.ResultCode.errormsg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.errormsg_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.errormsg_.Set("", GetArena());
  }
  return released;
}
inline void ResultCode::set_allocated_errormsg(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.errormsg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.errormsg_.IsDefault()) {
    _impl_.errormsg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:friends.ResultCode.errormsg)
}

// bool result = 3;
inline void ResultCode::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool ResultCode::result() const {
  // @@protoc_insertion_point(field_get:friends.ResultCode.result)
  return _internal_result();
}
inline void ResultCode::set_result(bool value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:friends.ResultCode.result)
}
inline bool ResultCode::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ResultCode::_internal_set_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// User

// uint32 id = 1;
inline void User::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t User::id() const {
  // @@protoc_insertion_point(field_get:friends.User.id)
  return _internal_id();
}
inline void User::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:friends.User.id)
}
inline ::uint32_t User::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void User::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 2;
inline void User::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& User::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:friends.User.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void User::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:friends.User.name)
}
inline ::std::string* PROTOBUF_NONNULL User::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:friends.User.name)
  return _s;
}
inline const ::std::string& User::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void User::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL User::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE User::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:friends.User.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void User::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:friends.User.name)
}

// .friends.User.SEX sex = 3;
inline void User::clear_sex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sex_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::friends::User_SEX User::sex() const {
  // @@protoc_insertion_point(field_get:friends.User.sex)
  return _internal_sex();
}
inline void User::set_sex(::friends::User_SEX value) {
  _internal_set_sex(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:friends.User.sex)
}
inline ::friends::User_SEX User::_internal_sex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::friends::User_SEX>(_impl_.sex_);
}
inline void User::_internal_set_sex(::friends::User_SEX value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sex_ = value;
}

// -------------------------------------------------------------------

// GetFriendListRquest

// uint32 userid = 1;
inline void GetFriendListRquest::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t GetFriendListRquest::userid() const {
  // @@protoc_insertion_point(field_get:friends.GetFriendListRquest.userid)
  return _internal_userid();
}
inline void GetFriendListRquest::set_userid(::uint32_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:friends.GetFriendListRquest.userid)
}
inline ::uint32_t GetFriendListRquest::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void GetFriendListRquest::_internal_set_userid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// -------------------------------------------------------------------

// GetFriendListResponse

// .friends.ResultCode result = 1;
inline bool GetFriendListResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline void GetFriendListResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::friends::ResultCode& GetFriendListResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::friends::ResultCode* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::friends::ResultCode&>(::friends::_ResultCode_default_instance_);
}
inline const ::friends::ResultCode& GetFriendListResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:friends.GetFriendListResponse.result)
  return _internal_result();
}
inline void GetFriendListResponse::unsafe_arena_set_allocated_result(
    ::friends::ResultCode* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::friends::ResultCode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:friends.GetFriendListResponse.result)
}
inline ::friends::ResultCode* PROTOBUF_NULLABLE GetFriendListResponse::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::friends::ResultCode* released = _impl_.result_;
  _impl_.result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::friends::ResultCode* PROTOBUF_NULLABLE GetFriendListResponse::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:friends.GetFriendListResponse.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::friends::ResultCode* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::friends::ResultCode* PROTOBUF_NONNULL GetFriendListResponse::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::friends::ResultCode>(GetArena());
    _impl_.result_ = reinterpret_cast<::friends::ResultCode*>(p);
  }
  return _impl_.result_;
}
inline ::friends::ResultCode* PROTOBUF_NONNULL GetFriendListResponse::mutable_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::friends::ResultCode* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:friends.GetFriendListResponse.result)
  return _msg;
}
inline void GetFriendListResponse::set_allocated_result(::friends::ResultCode* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::friends::ResultCode*>(value);
  // @@protoc_insertion_point(field_set_allocated:friends.GetFriendListResponse.result)
}

// repeated .friends.User friendList = 2;
inline int GetFriendListResponse::_internal_friendlist_size() const {
  return _internal_friendlist().size();
}
inline int GetFriendListResponse::friendlist_size() const {
  return _internal_friendlist_size();
}
inline void GetFriendListResponse::clear_friendlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friendlist_.Clear();
}
inline ::friends::User* PROTOBUF_NONNULL GetFriendListResponse::mutable_friendlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:friends.GetFriendListResponse.friendList)
  return _internal_mutable_friendlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::friends::User>* PROTOBUF_NONNULL GetFriendListResponse::mutable_friendlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:friends.GetFriendListResponse.friendList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_friendlist();
}
inline const ::friends::User& GetFriendListResponse::friendlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:friends.GetFriendListResponse.friendList)
  return _internal_friendlist().Get(index);
}
inline ::friends::User* PROTOBUF_NONNULL GetFriendListResponse::add_friendlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::friends::User* _add = _internal_mutable_friendlist()->Add();
  // @@protoc_insertion_point(field_add:friends.GetFriendListResponse.friendList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::friends::User>& GetFriendListResponse::friendlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:friends.GetFriendListResponse.friendList)
  return _internal_friendlist();
}
inline const ::google::protobuf::RepeatedPtrField<::friends::User>&
GetFriendListResponse::_internal_friendlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friendlist_;
}
inline ::google::protobuf::RepeatedPtrField<::friends::User>* PROTOBUF_NONNULL
GetFriendListResponse::_internal_mutable_friendlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.friendlist_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace friends


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::friends::User_SEX> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::friends::User_SEX>() {
  return ::friends::User_SEX_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // friendservice_2eproto_2epb_2eh
